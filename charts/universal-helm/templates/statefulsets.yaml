{{- range $ksts, $sts := $.Values.statefulset }}
{{- $volumeName := printf "%s-data" $sts.name }}

---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ $sts.name }}
  labels:
    {{- include "universal-helm.labels" $ | nindent 4 }}
    {{- with $sts.labels }}
      {{- toYaml . | nindent 4 }}
    {{- end }}
spec:
  serviceName: {{ template "universal-helm.fullname" $ }}-svc
  podManagementPolicy: {{ default "Parallel" $.Values.global.podManagementPolicy }}
  updateStrategy:
    type: {{ default "RollingUpdate" $.Values.global.updateStrategy }}
    {{- if (eq "Recreate" (default "RollingUpdate" $.Values.global.updateStrategy)) }}
    rollingUpdate: null
    {{- end }}
  selector:
    matchLabels:
      statefulsetname: {{ $sts.name }}
  replicas: {{ default 1 $sts.replicas }}
  template:
    metadata:
      name: {{ template "universal-helm.fullname" $ }}
      labels:
        {{- include "universal-helm.labels" $ | nindent 8 }}
        {{- with $sts.labels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
        statefulsetname: {{ $sts.name }}
      {{- with $sts.podAnnotations }}
      annotations: {{- toYaml . | nindent 8 }}
      {{- end }}
    spec:
      terminationGracePeriodSeconds: {{ default 180 $.Values.global.terminationGracePeriodSeconds }}
      {{- with $sts.affinity }}
      affinity: {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with $sts.tolerations }}
      tolerations: {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with $sts.nodeSelector }}
      nodeSelector: {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with $sts.topologySpreadConstraints }}
      topologySpreadConstraints: {{- toYaml . | nindent 8 }}
      {{- end }}

      {{- with $.Values.global.securityContext }}
      securityContext: {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with $.Values.global.serviceAccount.name }}
      serviceAccountName: {{ . }}
      {{- end }}

      initContainers:
      {{- range $kcntnr, $cntnr := $sts.initContainers }}
        - name: {{ $kcntnr }}
          image: "{{ $cntnr.image.repository }}:{{ $cntnr.image.tag }}"
          imagePullPolicy: {{ default "IfNotPresent" $cntnr.image.imagePullPolicy }}
          {{- with $cntnr.envFrom }}
          envFrom: {{- toYaml . | nindent 12}}
          {{- end }}
          {{- with $cntnr.env }}
          env: {{- toYaml . | nindent 12}}
          {{- end }}
          {{- with $cntnr.workingDir }}
          workingDir: {{ . }}
          {{- end }}
          {{- with $cntnr.command }}
          command: {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with $cntnr.args }}
          args: {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with $cntnr.resources }}
          resources: {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- range $kprt, $prt := $cntnr.ports }}
          ports:
            - name:  {{ $prt.name}}
              protocol: {{ $prt.protocol }}
              containerPort: {{ $prt.port }}
          {{- end }}
          volumeMounts:
          {{- if $sts.persistence }} {{ if $sts.persistence.volumeClaimTemplates}} {{if $sts.persistence.volumeClaimTemplates.volumeMountPath }}
            - name: {{ $volumeName }}
              mountPath: {{ $sts.persistence.volumeClaimTemplates.volumeMountPath }}
          {{- end }}{{end}}{{end}}

          {{- range $cm := $sts.mountConfigMaps }}{{/* # Volume mounts from mountConfigMaps */}}
            - name: {{$cm.name}}
              mountPath: {{ $cm.mountPath }}
          {{- end }}

          {{- range $sec := $sts.mountSecrets }}{{/* # Volume mounts from mountSecrets */}}
            - name: {{$sec.name}}
              mountPath: {{ $sec.mountPath }}
          {{- end }}
      {{- end }}  {{/* #range $kcntnr, $cntnr := $sts.initContainers */}}

      {{- with $sts.imagePullSecrets }}
      imagePullSecrets: {{ toYaml . | nindent 8 }}
      {{- end }}
      containers:
      {{- range $kcntnr, $cntnr := $sts.containers }}

        - name: {{ $cntnr.name }}
          image: "{{ $cntnr.image.repository }}:{{ $cntnr.image.tag }}"
          imagePullPolicy: {{ default "IfNotPresent" $cntnr.image.imagePullPolicy }}

          {{- with $cntnr.envFrom }}
          envFrom: {{- toYaml . | nindent 12}}
          {{- end }}
          {{- with $cntnr.env }}
          env: {{- toYaml . | nindent 12}}
          {{- end }}

          {{- with $cntnr.workingDir }}
          workingDir: {{ . }}
          {{- end }}
          {{- with $cntnr.command }}
          command: {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with $cntnr.args }}
          args: {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with $cntnr.resources }}
          resources: {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with $cntnr.lifecycle }}
          lifecycle: {{- toYaml . | nindent 12 }}
          {{- end }}

          ports:
          {{- range $kprt, $prt := $cntnr.ports }}
            - name:  {{ $prt.name}}
              protocol: {{ $prt.protocol }}
              containerPort: {{ $prt.port }}
          {{- end }}

          {{- with (default (list ) $cntnr.startupProbe) }}
          startupProbe: {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with (default (list ) $cntnr.livenessProbe) }}
          livenessProbe: {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with (default (list ) $cntnr.readinessProbe) }}
          readinessProbe: {{- toYaml . | nindent 12 }}
          {{- end }}

          volumeMounts:
            - name: {{ $volumeName }}
              mountPath: {{ $sts.persistence.volumeMountPath }}

          {{- range $cm := $sts.mountConfigMaps }}{{/* # Volume mounts from mountConfigMaps */}}
            - name: {{$cm.name}}
              mountPath: {{ $cm.mountPath }}
          {{- end }}

          {{- range $sec := $sts.mountSecrets }}{{/* # Volume mounts from mountSecrets */}}
            - name: {{$sec.name}}
              mountPath: {{ $sec.mountPath }}
          {{- end }}

            {{- if $sts.persistence.extraPVC }}
            - name: extra-data
              mountPath: /extra-data
            {{- end }}

      {{- end }} # {{/* range $kcntnr, $cntnr := $sts.containers */}}

      volumes:
        {{- range $cm := $sts.mountConfigMaps }}{{/* # Volume mounts from mountConfigMaps */}}
        - name: {{$cm.name}}
          configMap:
            name: {{$cm.name}}
          {{- with $cm.items }}
            items:
              {{- toYaml . | nindent 14 }}
          {{- end }}
        {{- end }}

        {{- range $sec := $sts.mountSecrets }}{{/* # Volume mounts from mountSecrets */}}
        - name: {{$sec.name}}
          secret:
            secretName: {{$sec.name}}
            optional: false
            defaultMode: {{$sec.defaultMode}}
          {{- with $sec.items }}
            items:
              {{- toYaml . | nindent 14 }}
          {{- end }}
        {{- end }}

        {{- if $sts.persistence.extraPVC }}
        - name: extra-data
          persistentVolumeClaim:
            claimName: {{ $sts.persistence.extraPVC }}
        {{- end }}

  volumeClaimTemplates:
    - metadata:
        name: {{ $volumeName }}
      spec:
        {{- if $sts.persistence.storageClassName }}
        storageClassName: {{ $sts.persistence.storageClassName }}
        {{- end }}
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: {{ $sts.persistence.size | quote }}
        {{- if $sts.persistence.gcpVolumeSnapshot }}
        dataSource:
          name: {{ $sts.persistence.gcpVolumeSnapshot | quote }}
          kind: VolumeSnapshot
          apiGroup: snapshot.storage.k8s.io
        {{- end }}
{{ end }} # {{/* range $ksts, $sts := $.Values.statefulset */}}
